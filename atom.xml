<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sam&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.lisanlai.cn/"/>
  <updated>2018-07-10T02:38:15.609Z</updated>
  <id>http://blog.lisanlai.cn/</id>
  
  <author>
    <name>李三来</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Error: Cannot find module &#39;hexo-util&#39;</title>
    <link href="http://blog.lisanlai.cn/2017/03/27/Error-Cannot-find-module-hexo-util/"/>
    <id>http://blog.lisanlai.cn/2017/03/27/Error-Cannot-find-module-hexo-util/</id>
    <published>2017-03-27T08:25:03.000Z</published>
    <updated>2018-07-10T02:38:15.609Z</updated>
    
    <content type="html"><![CDATA[<p>升级NexT主题以后，执行<code>hexo clean</code>，出错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">✗ hexo clean         </span><br><span class="line">ERROR Script load failed: themes/next/scripts/tags/exturl.js</span><br><span class="line">Error: Cannot find module 'hexo-util'</span><br><span class="line">    at Function.Module._resolveFilename (module.js:325:15)</span><br><span class="line">    at Function.Module._load (module.js:276:25)</span><br><span class="line">    at Module.require (module.js:353:17)</span><br><span class="line">    at require (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/lib/hexo/index.js:213:21)</span><br><span class="line">    at /Users/lisanlai/lisanlai.github.io/themes/next/scripts/tags/exturl.js:8:12</span><br><span class="line">    at /Users/lisanlai/lisanlai.github.io/node_modules/hexo/lib/hexo/index.js:229:12</span><br><span class="line">    at tryCatcher (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:502:31)</span><br><span class="line">    at Promise._settlePromise (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:559:18)</span><br><span class="line">    at Promise._settlePromise0 (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:604:10)</span><br><span class="line">    at Promise._settlePromises (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:683:18)</span><br><span class="line">    at Promise._fulfill (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:628:18)</span><br><span class="line">    at Promise._resolveCallback (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:423:57)</span><br><span class="line">    at Promise._settlePromiseFromHandler (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:514:17)</span><br><span class="line">    at Promise._settlePromise (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:559:18)</span><br><span class="line">    at Promise._settlePromise0 (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:604:10)</span><br><span class="line">    at Promise._settlePromises (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:683:18)</span><br><span class="line">    at Promise._fulfill (/Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/promise.js:628:18)</span><br><span class="line">    at /Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/bluebird/js/release/nodeback.js:42:21</span><br><span class="line">    at /Users/lisanlai/lisanlai.github.io/node_modules/hexo/node_modules/hexo-fs/node_modules/graceful-fs/graceful-fs.js:78:16</span><br><span class="line">    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)</span><br><span class="line">INFO  Deleted database.</span><br></pre></td></tr></table></figure><p><strong>解决办法：重新安装hexo-util模块 </strong></p><p><code>npm install -- save-dev hexo-util</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;升级NexT主题以后，执行&lt;code&gt;hexo clean&lt;/code&gt;，出错：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.lisanlai.cn/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://blog.lisanlai.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Jira rest api 使用经验</title>
    <link href="http://blog.lisanlai.cn/2017/03/26/Jira-rest-api-%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/"/>
    <id>http://blog.lisanlai.cn/2017/03/26/Jira-rest-api-使用经验/</id>
    <published>2017-03-26T14:46:49.000Z</published>
    <updated>2018-07-10T02:38:15.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-JIRA-REST-API-可以做什么？"><a href="#1-JIRA-REST-API-可以做什么？" class="headerlink" title="1. JIRA REST API 可以做什么？"></a>1. JIRA REST API 可以做什么？</h2><div class="note "><p>The Atlassian REST APIs provide a standard interface for interacting with JIRA and our other applications. </p><p>REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. REST APIs operate over HTTP(s) making it easy to use with any programming language or framework. The input and output format for the JIRA REST APIs is <a href="http://www.json.org/" target="_blank" rel="noopener">JSON</a>.</p></div><p>我们可以通过REST API去访问收保护的资源，例如增、删、改、查ISSUES 。。。。。</p><p>支持标准的HTTP method，例如 GET, PUT, POST , DELETE</p><p>所有的API的input 和 output 都是 JSON 格式。</p><div class="note primary"><p>Rest API Reference ： <a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis" target="_blank" rel="noopener">https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis</a></p></div><div class="note info"><p>REST URI 结构 ： <a href="http://host:port/context/rest/api-name/api-version/resource-name" target="_blank" rel="noopener">http://host:port/context/rest/api-name/api-version/resource-name</a></p></div><div class="note success"><p>资源列表 ： <a href="https://developer.atlassian.com/static/rest/jira/6.1.html" target="_blank" rel="noopener">https://developer.atlassian.com/static/rest/jira/6.1.html</a></p></div><a id="more"></a><h2 id="2-JIRA-REST-API鉴权方式"><a href="#2-JIRA-REST-API鉴权方式" class="headerlink" title="2. JIRA REST API鉴权方式"></a>2. JIRA REST API鉴权方式</h2><blockquote class="blockquote-center"><p>The REST APIs support basic authentication, cookie-based (session) authentication, and OAuth. See the examples of <a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-basic-authentication" target="_blank" rel="noopener">basic authentication</a>, <a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-cookie-based-authentication" target="_blank" rel="noopener">cookie-based authentication</a>, and <a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-oauth-authentication" target="_blank" rel="noopener">OAuth</a>.</p></blockquote><p>JIRA REST API 支持3种鉴权方式：</p><ol><li><a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-basic-authentication" target="_blank" rel="noopener">basic authentication</a></li><li><a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-cookie-based-authentication" target="_blank" rel="noopener">cookie-based authentication</a></li><li><a href="https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis/jira-rest-api-tutorials/jira-rest-api-example-oauth-authentication" target="_blank" rel="noopener">OAuth</a></li></ol><div class="note warning"><p>目前JIRA REST API 只支持OAuth1.0</p></div><h2 id="3-如何使用OAuth方式鉴权"><a href="#3-如何使用OAuth方式鉴权" class="headerlink" title="3. 如何使用OAuth方式鉴权"></a>3. 如何使用OAuth方式鉴权</h2><p>因为basic authentication 和 cookie-based authentication两种方式比较简单，且不推荐使用，这里我说说推荐使用的OAuth方式如何玩。</p><ol><li>首先需要到Jira上配置Application link，注册一个新的consumer</li><li>配置客户端oauth信息</li></ol><h3 id="Step1-Create-application-link"><a href="#Step1-Create-application-link" class="headerlink" title="Step1: Create application link"></a>Step1: Create application link</h3><div class="note "><p>JIRA Administration &gt; System &gt; Applications tab &gt; Application links</p></div><h3 id="Step2-Configuring-the-client"><a href="#Step2-Configuring-the-client" class="headerlink" title="Step2: Configuring the client"></a>Step2: Configuring the client</h3><table><thead><tr><th style="text-align:left">OAuth Config</th><th style="text-align:left">value</th></tr></thead><tbody><tr><td style="text-align:left">request token url</td><td style="text-align:left">JIRA_BASE_URL + “/plugins/servlet/oauth/request-token”</td></tr><tr><td style="text-align:left">authorization url</td><td style="text-align:left">JIRA_BASE_URL + “/plugins/servlet/oauth/authorize””</td></tr><tr><td style="text-align:left">access token url</td><td style="text-align:left">JIRA_BASE_URL + “/plugins/servlet/oauth/access-token”</td></tr><tr><td style="text-align:left">oauth signing type</td><td style="text-align:left">RSA-SHA1，需要生成key pair，且粘贴public key到oauth配置里面</td></tr><tr><td style="text-align:left">consumer key</td><td style="text-align:left">Step1里面配置的值</td></tr></tbody></table><h2 id="4-使用Java-client来获取access-token"><a href="#4-使用Java-client来获取access-token" class="headerlink" title="4. 使用Java client来获取access token"></a>4. 使用Java client来获取access token</h2><div class="note success"><p>Java oauth client 是基于John Kristian的源码做了一些改进</p><p>Github ：<a href="https://github.com/lisanlai/jira.oauth.client" target="_blank" rel="noopener">https://github.com/lisanlai/jira.oauth.client</a></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lisanlai on 2017/3/27.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BASEURL = <span class="string">"Jira domain url"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONSUMER_KEY = <span class="string">"你自己配置的consumer key"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONSUMER_PRIVATE_KEY = <span class="string">"你自己生成的RSA private key"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CALLBACK_URI = <span class="string">"http://requestb.in/12f4ung1"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        AtlassianOAuthClient jiraoAuthClient = <span class="keyword">new</span> AtlassianOAuthClient(CONSUMER_KEY, CONSUMER_PRIVATE_KEY, BASEURL, CALLBACK_URI);</span><br><span class="line">        <span class="comment">//STEP 1: 获取request token</span></span><br><span class="line">        TokenSecretVerifierHolder requestToken = jiraoAuthClient.getRequestToken();</span><br><span class="line">        String authorizeUrl = jiraoAuthClient.getAuthorizeUrlForToken(requestToken.token);</span><br><span class="line">        System.out.println(<span class="string">"Token is "</span> + requestToken.token);</span><br><span class="line">        System.out.println(<span class="string">"Token secret is "</span> + requestToken.secret);</span><br><span class="line">        System.out.println(<span class="string">"Retrieved request token. go to "</span> + authorizeUrl);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//STEP2 : 授权， 打开STEP1里面获取到的authorize url</span></span><br><span class="line">        <span class="comment">//登录jira并点击allow按钮</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//STEP3 : 获取 access token</span></span><br><span class="line">        <span class="comment">//getAccessToken("810qrpbOePqXdMRWcoOuMLdoBoLuh9To", "M4O6qaRC4OVDKzQOCcVrmvvpCNkYmhpm", "0aOMdW");</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getAccessToken</span><span class="params">(String requestToken, String tokenSecret, String verifier)</span> <span class="keyword">throws</span> OAuthException, IOException, URISyntaxException </span>&#123;</span><br><span class="line">        AtlassianOAuthClient jiraoAuthClient = <span class="keyword">new</span> AtlassianOAuthClient(CONSUMER_KEY, CONSUMER_PRIVATE_KEY, BASEURL, CALLBACK_URI);</span><br><span class="line">        String accessToken = jiraoAuthClient.swapRequestTokenForAccessToken(requestToken, tokenSecret, verifier);</span><br><span class="line">        System.out.println(<span class="string">"Access token is : "</span> + accessToken);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-使用REST-API创建-修改-查询issue"><a href="#5-使用REST-API创建-修改-查询issue" class="headerlink" title="5. 使用REST API创建/修改/查询issue"></a>5. 使用REST API创建/修改/查询issue</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">String accessToken = <span class="string">"access token"</span>;</span><br><span class="line">String requestUrl =  JIRA_BASE_URL + <span class="string">"/rest/api/2/issue"</span>;</span><br><span class="line">String jsonBody = <span class="string">"&#123;\n"</span> +</span><br><span class="line">                <span class="string">"    \"fields\": &#123;\n"</span> +</span><br><span class="line">                <span class="string">"       \"project\":\n"</span> +</span><br><span class="line">                <span class="string">"       &#123; \n"</span> +</span><br><span class="line">                <span class="string">"          \"key\": \"ASYNC\"\n"</span> +</span><br><span class="line">                <span class="string">"       &#125;,\n"</span> +</span><br><span class="line">                <span class="string">"       \"summary\": \"REST ye merry gentlemen.\",\n"</span> +</span><br><span class="line">                <span class="string">"       \"description\": \"Creating of an issue using project keys and issue type names using the REST API\",\n"</span> +</span><br><span class="line">                <span class="string">"       \"issuetype\": &#123;\n"</span> +</span><br><span class="line">                <span class="string">"          \"name\": \"Bug\"\n"</span> +</span><br><span class="line">                <span class="string">"       &#125;\n"</span> +</span><br><span class="line">                <span class="string">"   &#125;\n"</span> +</span><br><span class="line">                <span class="string">"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">String responseAsString = jiraoAuthClient.makeAuthenticatedRequest(accessToken, OAuthMessage.POST, requestUrl, Collections.emptySet(), jsonBody);</span><br><span class="line">System.out.println(<span class="string">"RESPONSE IS"</span> + responseAsString);</span><br></pre></td></tr></table></figure><h2 id="6-JIRA-OAuth-dance"><a href="#6-JIRA-OAuth-dance" class="headerlink" title="6. JIRA OAuth dance"></a>6. JIRA OAuth dance</h2><img src="/2017/03/26/Jira-rest-api-使用经验/jira-oauth-dance.png" title="JIRA OAuth dance">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-JIRA-REST-API-可以做什么？&quot;&gt;&lt;a href=&quot;#1-JIRA-REST-API-可以做什么？&quot; class=&quot;headerlink&quot; title=&quot;1. JIRA REST API 可以做什么？&quot;&gt;&lt;/a&gt;1. JIRA REST API 可以做什么？&lt;/h2&gt;&lt;div class=&quot;note &quot;&gt;&lt;p&gt;The Atlassian REST APIs provide a standard interface for interacting with JIRA and our other applications. &lt;/p&gt;
&lt;p&gt;REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. REST APIs operate over HTTP(s) making it easy to use with any programming language or framework. The input and output format for the JIRA REST APIs is &lt;a href=&quot;http://www.json.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JSON&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;我们可以通过REST API去访问收保护的资源，例如增、删、改、查ISSUES 。。。。。&lt;/p&gt;
&lt;p&gt;支持标准的HTTP method，例如 GET, PUT, POST , DELETE&lt;/p&gt;
&lt;p&gt;所有的API的input 和 output 都是 JSON 格式。&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;Rest API Reference ： &lt;a href=&quot;https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.atlassian.com/jiradev/jira-apis/jira-rest-apis&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;REST URI 结构 ： &lt;a href=&quot;http://host:port/context/rest/api-name/api-version/resource-name&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://host:port/context/rest/api-name/api-version/resource-name&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;资源列表 ： &lt;a href=&quot;https://developer.atlassian.com/static/rest/jira/6.1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.atlassian.com/static/rest/jira/6.1.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="Java" scheme="http://blog.lisanlai.cn/tags/Java/"/>
    
      <category term="JIRA" scheme="http://blog.lisanlai.cn/tags/JIRA/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot Mybatis 多数据源配置</title>
    <link href="http://blog.lisanlai.cn/2016/12/14/Spring-Boot-Mybatis-%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.lisanlai.cn/2016/12/14/Spring-Boot-Mybatis-多数据源配置/</id>
    <published>2016-12-14T09:32:36.000Z</published>
    <updated>2018-07-10T02:38:15.611Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>这篇文章涉及到的类和配置文件列表：</p><ul><li>pom.xml</li><li>application.properties</li><li>MybatisProperties.java</li><li>AbstractDatasourceConfig.java</li><li>ReadDatasourceConfig.java</li><li>PrimaryDatasourceConfig.java</li></ul></li></ol><ol start="2"><li><p>添加依赖：pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zaxxer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HikariCP<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>添加数据源配置项：application.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#primary datasource setting</span><br><span class="line">datasource.primary.name=dmsdb_primary</span><br><span class="line">datasource.primary.username=devdb</span><br><span class="line">datasource.primary.password=******</span><br><span class="line">datasource.primary.jdbcUrl=jdbc:mysql://127.0.0.1:3306/dmsdb_primary?autoReconnect=true&amp;characterEncoding=UTF-8</span><br><span class="line"></span><br><span class="line">#read datasource setting</span><br><span class="line">datasource.read.name=dmsdb_read</span><br><span class="line">datasource.read.username=devdb</span><br><span class="line">datasource.read.password=******</span><br><span class="line">datasource.read.jdbcUrl=jdbc:mysql://127.0.0.1:3306/dmsdb_read?autoReconnect=true&amp;characterEncoding=UTF-8</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>添加MybatisProperities的配置项：application.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#mybatis setting</span><br><span class="line">mybatis.config-location=classpath:mybatis/mybatis-config.xml</span><br><span class="line">mybatis.mapper-locations=classpath:mybatis/mapper/**/*.xml</span><br><span class="line">mybatis.type-aliases-package=zoomus.addons.model</span><br><span class="line">mybatis.check-config-location=false</span><br><span class="line">mybatis.executor-type=reuse</span><br></pre></td></tr></table></figure></li><li><p>创建类: MybatisProperities.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zoomus.addons.config.properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.builder.ToStringBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ExecutorType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.Resource;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lisanlai on 2016/12/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = MybatisProperties.MYBATIS_PREFIX)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String MYBATIS_PREFIX = <span class="string">"mybatis"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Resource configLocation;</span><br><span class="line">    <span class="keyword">private</span> Resource[] mapperLocations;</span><br><span class="line">    <span class="keyword">private</span> String typeAliasesPackage;</span><br><span class="line">    <span class="keyword">private</span> String typeHandlersPackage;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> checkConfigLocation = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> ExecutorType executorType = ExecutorType.SIMPLE;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Resource <span class="title">getConfigLocation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configLocation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigLocation</span><span class="params">(Resource configLocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configLocation = configLocation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Resource[] getMapperLocations() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapperLocations;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMapperLocations</span><span class="params">(Resource[] mapperLocations)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mapperLocations = mapperLocations;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTypeHandlersPackage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.typeHandlersPackage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeHandlersPackage</span><span class="params">(String typeHandlersPackage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.typeHandlersPackage = typeHandlersPackage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTypeAliasesPackage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.typeAliasesPackage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeAliasesPackage</span><span class="params">(String typeAliasesPackage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.typeAliasesPackage = typeAliasesPackage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCheckConfigLocation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.checkConfigLocation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCheckConfigLocation</span><span class="params">(<span class="keyword">boolean</span> checkConfigLocation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.checkConfigLocation = checkConfigLocation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ExecutorType <span class="title">getExecutorType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.executorType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExecutorType</span><span class="params">(ExecutorType executorType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.executorType = executorType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ToStringBuilder(<span class="keyword">this</span>)</span><br><span class="line">                .append(<span class="string">"configLocation"</span>, configLocation)</span><br><span class="line">                .append(<span class="string">"mapperLocations"</span>, mapperLocations)</span><br><span class="line">                .append(<span class="string">"typeAliasesPackage"</span>, typeAliasesPackage)</span><br><span class="line">                .append(<span class="string">"typeHandlersPackage"</span>, typeHandlersPackage)</span><br><span class="line">                .append(<span class="string">"checkConfigLocation"</span>, checkConfigLocation)</span><br><span class="line">                .append(<span class="string">"executorType"</span>, executorType)</span><br><span class="line">                .toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建类： AbstractDatasourceConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zoomus.addons.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> zoomus.addons.config.properties.MybatisProperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lisanlai on 2016/12/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractDatasourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(AbstractDatasourceConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">sqlSessionFactory</span><span class="params">(DataSource primaryDataSource, MybatisProperties properties)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing sqlSessionFactory; properties = &#123;&#125;"</span>, properties);</span><br><span class="line">        <span class="keyword">final</span> SqlSessionFactoryBean sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        sessionFactory.setDataSource(primaryDataSource);</span><br><span class="line">        sessionFactory.setConfigLocation(properties.getConfigLocation());</span><br><span class="line">        sessionFactory.setMapperLocations(properties.getMapperLocations());</span><br><span class="line">        sessionFactory.setTypeAliasesPackage(properties.getTypeAliasesPackage());</span><br><span class="line">        sessionFactory.setTypeHandlersPackage(properties.getTypeHandlersPackage());</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建类： PrimaryDatasourceConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zoomus.addons.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"><span class="keyword">import</span> zoomus.addons.config.properties.MybatisProperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lisanlai on 2016/12/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(MybatisProperties.class)</span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = PrimaryDatasourceConfig.PACKAGE, sqlSessionFactoryRef = <span class="string">"primarySqlSessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimaryDatasourceConfig</span> <span class="keyword">extends</span> <span class="title">AbstractDatasourceConfig</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 指定java mapper 接口的包路径 */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String PACKAGE = <span class="string">"zoomus.addons.repository.mybatis.primary"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(PrimaryDatasourceConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MybatisProperties properties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"datasource.primary"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing primaryDataSource..."</span>);</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"primaryTransactionManager"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">primaryTransactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing primaryTransactionManager..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(primaryDataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"primarySqlSessionFactory"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">primarySqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing primarySqlSessionFactory..."</span>);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory(primaryDataSource(), properties);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建类： ReadDatasourceConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zoomus.addons.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"><span class="keyword">import</span> zoomus.addons.config.properties.MybatisProperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lisanlai on 2016/12/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(MybatisProperties.class)</span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = ReadDatasourceConfig.PACKAGE, sqlSessionFactoryRef = <span class="string">"readSqlSessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadDatasourceConfig</span> <span class="keyword">extends</span> <span class="title">AbstractDatasourceConfig</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 指定java mapper 接口的包路径 */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String PACKAGE = <span class="string">"zoomus.addons.repository.mybatis.read"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(ReadDatasourceConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MybatisProperties properties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"datasource.read"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">readDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing readDataSource..."</span>);</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"readTransactionManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">readTransactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing readTransactionManager..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(readDataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"readSqlSessionFactory"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">readSqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Initializing readSqlSessionFactory..."</span>);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory(readDataSource(), properties);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加Mapper类到相对应的package路径</p><blockquote><ul><li><p>Primary mapper package</p><p>static final String PACKAGE = “zoomus.addons.repository.mybatis.primary”;</p></li><li><p>Read mapper package</p><p>static final String PACKAGE = “zoomus.addons.repository.mybatis.read”;</p></li></ul></blockquote></li><li><p>使用演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoServiceImpl</span> <span class="keyword">implements</span> <span class="title">DemoService</span> </span>&#123;</span><br><span class="line">....</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> DemoPrimaryMapper demoPrimaryMapper;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> DemoReadMapper demoReadMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DemoServiceImpl</span><span class="params">(DemoPrimaryMapper demoPrimaryMapper,</span></span></span><br><span class="line"><span class="function"><span class="params">                           demoReadMapper demoReadMapper)</span> </span>&#123;</span><br><span class="line">        Assert.notNull(demoPrimaryMapper, <span class="string">"demoPrimaryMapper must not be null!"</span>);</span><br><span class="line">        Assert.notNull(demoReadMapper, <span class="string">"demoReadMapper must not be null!"</span>);</span><br><span class="line">        <span class="keyword">this</span>.demoPrimaryMapper = demoPrimaryMapper;</span><br><span class="line">        <span class="keyword">this</span>.demoReadMapper = demoReadMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveDemoObject</span><span class="params">(DemoObject demoObject)</span> </span>&#123;</span><br><span class="line">    demoPrimaryMapper.save(demoObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DemoObject <span class="title">getDemoObject</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> demoReadMapper.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果需要使用注解事务，需要指定事务管理器，如：</span></span><br><span class="line">    <span class="meta">@Transactional</span>(<span class="string">"primaryTransactionManager"</span>)</span><br><span class="line"></span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;这篇文章涉及到的类和配置文件列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pom.xml&lt;/li&gt;
&lt;li&gt;application.properties&lt;/li&gt;
&lt;li&gt;MybatisProperties.java&lt;/li&gt;
&lt;li&gt;AbstractDatasourceConfig.java&lt;/li&gt;
&lt;li&gt;ReadDatasourceConfig.java&lt;/li&gt;
&lt;li&gt;PrimaryDatasourceConfig.java&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;添加依赖：pom.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.zaxxer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;HikariCP&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.5.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mybatis&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.4.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mybatis-spring&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-tx&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;4.3.4.RELEASE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://blog.lisanlai.cn/categories/SpringBoot/"/>
    
    
      <category term="Java" scheme="http://blog.lisanlai.cn/tags/Java/"/>
    
      <category term="SpringBoot" scheme="http://blog.lisanlai.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot-starter-data-redis 乱码</title>
    <link href="http://blog.lisanlai.cn/2016/11/30/spring-boot-starter-data-redis-%E4%B9%B1%E7%A0%81/"/>
    <id>http://blog.lisanlai.cn/2016/11/30/spring-boot-starter-data-redis-乱码/</id>
    <published>2016-11-30T06:17:22.000Z</published>
    <updated>2018-07-10T02:38:15.611Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>RedisTemplate源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTemplate</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">RedisAccessor</span> <span class="keyword">implements</span> <span class="title">RedisOperations</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt;, <span class="title">BeanClassLoaderAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> enableTransactionSupport = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> exposeConnection = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> initialized = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> enableDefaultSerializer = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">private</span> RedisSerializer&lt;?&gt; defaultSerializer;</span><br><span class="line"><span class="keyword">private</span> ClassLoader classLoader;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">private</span> RedisSerializer keySerializer = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">private</span> RedisSerializer valueSerializer = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">private</span> RedisSerializer hashKeySerializer = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">private</span> RedisSerializer hashValueSerializer = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">private</span> RedisSerializer&lt;String&gt; stringSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">   </span><br><span class="line">  ....</span><br><span class="line">    <span class="comment">//spring-boot-starter-data-redis 默认情况下使用的是JdkSerializationRedisSerializer</span></span><br><span class="line">    <span class="comment">//这个地方是导致redis key乱码的根本原因</span></span><br><span class="line">    <span class="comment">//需要做的就是替换一下keySerializer 和 hashKeySerializer</span></span><br><span class="line">    <span class="keyword">if</span> (defaultSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">defaultSerializer = <span class="keyword">new</span> JdkSerializationRedisSerializer(</span><br><span class="line">classLoader != <span class="keyword">null</span> ? classLoader : <span class="keyword">this</span>.getClass().getClassLoader());</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (enableDefaultSerializer) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (keySerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">keySerializer = defaultSerializer;</span><br><span class="line">defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (valueSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">valueSerializer = defaultSerializer;</span><br><span class="line">defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hashKeySerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">hashKeySerializer = defaultSerializer;</span><br><span class="line">defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hashValueSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">hashValueSerializer = defaultSerializer;</span><br><span class="line">defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重新申明RedisTemplate并设置keySerializer 和 hashKeySerializer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;Object, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">        RedisTemplate&lt;Object, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;Object, Object&gt;();</span><br><span class="line">        template.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        template.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;RedisTemplate源码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="spring_boot" scheme="http://blog.lisanlai.cn/tags/spring-boot/"/>
    
      <category term="redis" scheme="http://blog.lisanlai.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>从源码编译安装nginx</title>
    <link href="http://blog.lisanlai.cn/2016/11/23/%E4%BB%8E%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/"/>
    <id>http://blog.lisanlai.cn/2016/11/23/从源码编译安装nginx/</id>
    <published>2016-11-23T08:56:23.000Z</published>
    <updated>2018-07-10T02:38:15.611Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>参考文档： <a href="http://nginx.org/en/docs/configure.html" target="_blank" rel="noopener">参考文档</a></p></li><li><p>下载nginx源码：<a href="http://nginx.org/download/" target="_blank" rel="noopener">download</a> </p></li><li><p>预先下载所需模块：<a href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/" target="_blank" rel="noopener">pcre</a>     <a href="http://labs.frickle.com/nginx_ngx_cache_purge/" target="_blank" rel="noopener">nginx_ngx_cache_purge</a>    <a href="http://zlib.net/" target="_blank" rel="noopener">zlib</a></p></li><li><p>安装ssl模块：<code>yum -y install openssl openssl-devel</code></p></li><li><p>安装gcc编译器：<code>yum install -y gcc gcc-c++</code></p></li><li><p>目录结构如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[devadmin_sam@hzserver nginx]$ ll</span><br><span class="line">总用量 24</span><br><span class="line">drwxr-xr-x  9 devadmin_sam dev  4096 11月 23 13:12 nginx-1.10.2</span><br><span class="line">drwxr-xr-x  3 devadmin_sam dev  4096 12月 24 2014 ngx_cache_purge-2.3</span><br><span class="line">drwxr-xr-x  9 devadmin_sam dev 12288 11月 23 13:14 pcre-8.39</span><br><span class="line">drwxr-xr-x 14 devadmin_sam dev  4096 11月 23 13:14 zlib-1.2.8</span><br></pre></td></tr></table></figure></li><li><p>编译参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">./configure\</span><br><span class="line">--prefix=/etc/nginx\</span><br><span class="line">--sbin-path=/usr/sbin/nginx\</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf\</span><br><span class="line">--error-log-path=/var/log/nginx/error.log\</span><br><span class="line">--http-log-path=/var/log/nginx/access.log\</span><br><span class="line">--pid-path=/var/run/nginx.pid\</span><br><span class="line">--lock-path=/var/run/nginx.lock\</span><br><span class="line">--http-client-body-temp-path=/var/cache/nginx/client_temp\</span><br><span class="line">--http-proxy-temp-path=/var/cache/nginx/proxy_temp\</span><br><span class="line">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp\</span><br><span class="line">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp\</span><br><span class="line">--http-scgi-temp-path=/var/cache/nginx/scgi_temp\</span><br><span class="line">--user=nginx\</span><br><span class="line">--group=nginx\</span><br><span class="line">--with-http_ssl_module\</span><br><span class="line">--with-http_realip_module\</span><br><span class="line">--with-http_addition_module\</span><br><span class="line">--with-http_sub_module\</span><br><span class="line">--with-http_dav_module\</span><br><span class="line">--with-http_flv_module\</span><br><span class="line">--with-http_mp4_module\</span><br><span class="line">--with-http_gunzip_module\</span><br><span class="line">--with-http_gzip_static_module\</span><br><span class="line">--with-http_random_index_module\</span><br><span class="line">--with-http_secure_link_module\</span><br><span class="line">--with-http_stub_status_module\</span><br><span class="line">--with-http_auth_request_module\</span><br><span class="line">--with-threads\</span><br><span class="line">--with-stream\</span><br><span class="line">--with-stream_ssl_module\</span><br><span class="line">--with-http_slice_module\</span><br><span class="line">--with-mail\</span><br><span class="line">--with-mail_ssl_module\</span><br><span class="line">--with-file-aio\</span><br><span class="line">--with-http_v2_module\</span><br><span class="line">--with-ipv6\</span><br><span class="line">--with-pcre=../pcre-8.39\</span><br><span class="line">--with-zlib=../zlib-1.2.8\</span><br><span class="line">--add-module=../ngx_cache_purge-2.3</span><br></pre></td></tr></table></figure></li><li><p><code>make &amp;&amp; make install</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;参考文档： &lt;a href=&quot;http://nginx.org/en/docs/configure.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载nginx源码：&lt;a hr
      
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="nginx" scheme="http://blog.lisanlai.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Java进程占用CPU过高排查方法</title>
    <link href="http://blog.lisanlai.cn/2016/07/27/Java%E8%BF%9B%E7%A8%8B%E5%8D%A0%E7%94%A8CPU%E8%BF%87%E9%AB%98%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.lisanlai.cn/2016/07/27/Java进程占用CPU过高排查方法/</id>
    <published>2016-07-27T02:06:05.000Z</published>
    <updated>2018-07-10T02:38:15.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-利用TOP命令查看，发现Java进程持续占高CPU"><a href="#1-利用TOP命令查看，发现Java进程持续占高CPU" class="headerlink" title="1.利用TOP命令查看，发现Java进程持续占高CPU"></a>1.利用TOP命令查看，发现Java进程持续占高CPU</h2><pre><code>PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                  4233 root      20   0 6667m 2.3g 8312 S 264.1 30.4  79979:06 java</code></pre><h2 id="2-利用TOP-H找到对应进程下面线程的耗CPU情况"><a href="#2-利用TOP-H找到对应进程下面线程的耗CPU情况" class="headerlink" title="2.利用TOP -H找到对应进程下面线程的耗CPU情况"></a>2.利用TOP -H找到对应进程下面线程的耗CPU情况</h2><pre><code># top -H -p 4233PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                   7041 root      20   0 6667m 2.3g 8312 S 20.1 30.4   5524:52 java                                      7048 root      20   0 6667m 2.3g 8312 S 18.8 30.4   5098:27 java                                      9625 root      20   0 6667m 2.3g 8312 S 18.5 30.4   7205:30 java                                     10111 root      20   0 6667m 2.3g 8312 S 17.8 30.4   6008:08 java                                     10254 root      20   0 6667m 2.3g 8312 S 17.8 30.4   6001:12 java                                     10923 root      20   0 6667m 2.3g 8312 S 17.5 30.4   5999:17 java                                     10033 root      20   0 6667m 2.3g 8312 S 17.1 30.4   6004:10 java                                      4353 root      20   0 6667m 2.3g 8312 S 16.8 30.4   7209:04 java                                      9685 root      20   0 6667m 2.3g 8312 S 16.8 30.4   6002:45 java                                      7042 root      20   0 6667m 2.3g 8312 S 16.5 30.4   7193:56 java                                      9910 root      20   0 6667m 2.3g 8312 S 16.5 30.4   6010:04 java                                     10893 root      20   0 6667m 2.3g 8312 S 16.5 30.4   7195:46 java                                      4235 root      20   0 6667m 2.3g 8312 S 15.5 30.4 815:26.39 java                                          4238 root      20   0 6667m 2.3g 8312 R 12.9 30.4 815:54.11 java                                      4236 root      20   0 6667m 2.3g 8312 S 12.5 30.4 811:10.16 java                                      4237 root      20   0 6667m 2.3g 8312 S  9.6 30.4 814:50.57 java                                      4239 root      20   0 6667m 2.3g 8312 S  2.0 30.4 752:01.99 java                                          4294 root      20   0 6667m 2.3g 8312 S  0.7 30.4  56:16.83 java                                      4280 root      20   0 6667m 2.3g 8312 S  0.3 30.4  68:25.58 java                                      4233 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                      4234 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:07.16 java                                      4240 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:10.14 java                                      4241 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:08.93 java                                      4242 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                      4243 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:52.14 java                                      4244 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:47.82 java                                          4245 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                      4246 root      20   0 6667m 2.3g 8312 S  0.0 30.4  19:30.64 java                                      4249 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:03.20 java </code></pre><a id="more"></a>     <h2 id="3-将需要查看的线程ID转换为16进制格式"><a href="#3-将需要查看的线程ID转换为16进制格式" class="headerlink" title="3.将需要查看的线程ID转换为16进制格式"></a>3.将需要查看的线程ID转换为16进制格式</h2><pre><code># printf &quot;%x\n&quot; 70411b81</code></pre><h2 id="4-打印线程的堆栈信息"><a href="#4-打印线程的堆栈信息" class="headerlink" title="4.打印线程的堆栈信息"></a>4.打印线程的堆栈信息</h2><pre><code># jstack 4233|grep 1b81 -A 30 &quot;http-80-61&quot; daemon prio=10 tid=0x00007f75e8067000 nid=0x1b81 runnable [0x00007f75733f1000]       java.lang.Thread.State: RUNNABLE        at com.saas.biz.commen.FilterChar.ignoreCaseIndexOf(FilterChar.java:94)        at com.saas.biz.commen.FilterChar.repex(FilterChar.java:41)        at com.saas.sys.dbm.Dbexecute.setQueryParam(Dbexecute.java:627)        at com.saas.sys.dbm.Dbexecute.selBizQuery(Dbexecute.java:426)        at com.saas.biz.dao.areaDAO.AreaExt.selByList(AreaExt.java:25)        at com.saas.biz.AreaInfoMgr.AreaInfo.getAllClassListForAdd(AreaInfo.java:1493)        at org.apache.jsp.car.supplier_jsp._jspService(supplier_jsp.java:116)        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)        at javax.servlet.http.HttpServlet.service(HttpServlet.java:723)        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:388)        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)        at javax.servlet.http.HttpServlet.service(HttpServlet.java:723)        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)        at org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(NormalRewrittenUrl.java:195)        at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:159)        at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:141)        at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:90)        at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:417)        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:470)</code></pre><h2 id="5-在堆栈信息里面找到你熟悉的字眼，去排查相关问题。"><a href="#5-在堆栈信息里面找到你熟悉的字眼，去排查相关问题。" class="headerlink" title="5.在堆栈信息里面找到你熟悉的字眼，去排查相关问题。"></a>5.在堆栈信息里面找到你熟悉的字眼，去排查相关问题。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-利用TOP命令查看，发现Java进程持续占高CPU&quot;&gt;&lt;a href=&quot;#1-利用TOP命令查看，发现Java进程持续占高CPU&quot; class=&quot;headerlink&quot; title=&quot;1.利用TOP命令查看，发现Java进程持续占高CPU&quot;&gt;&lt;/a&gt;1.利用TOP命令查看，发现Java进程持续占高CPU&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                  
4233 root      20   0 6667m 2.3g 8312 S 264.1 30.4  79979:06 java
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2-利用TOP-H找到对应进程下面线程的耗CPU情况&quot;&gt;&lt;a href=&quot;#2-利用TOP-H找到对应进程下面线程的耗CPU情况&quot; class=&quot;headerlink&quot; title=&quot;2.利用TOP -H找到对应进程下面线程的耗CPU情况&quot;&gt;&lt;/a&gt;2.利用TOP -H找到对应进程下面线程的耗CPU情况&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# top -H -p 4233
PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                  
 7041 root      20   0 6667m 2.3g 8312 S 20.1 30.4   5524:52 java                                     
 7048 root      20   0 6667m 2.3g 8312 S 18.8 30.4   5098:27 java                                     
 9625 root      20   0 6667m 2.3g 8312 S 18.5 30.4   7205:30 java                                     
10111 root      20   0 6667m 2.3g 8312 S 17.8 30.4   6008:08 java                                     
10254 root      20   0 6667m 2.3g 8312 S 17.8 30.4   6001:12 java                                     
10923 root      20   0 6667m 2.3g 8312 S 17.5 30.4   5999:17 java                                     
10033 root      20   0 6667m 2.3g 8312 S 17.1 30.4   6004:10 java                                     
 4353 root      20   0 6667m 2.3g 8312 S 16.8 30.4   7209:04 java                                     
 9685 root      20   0 6667m 2.3g 8312 S 16.8 30.4   6002:45 java                                     
 7042 root      20   0 6667m 2.3g 8312 S 16.5 30.4   7193:56 java                                     
 9910 root      20   0 6667m 2.3g 8312 S 16.5 30.4   6010:04 java                                     
10893 root      20   0 6667m 2.3g 8312 S 16.5 30.4   7195:46 java                                     
 4235 root      20   0 6667m 2.3g 8312 S 15.5 30.4 815:26.39 java                                          4238 root      20   0 6667m 2.3g 8312 R 12.9 30.4 815:54.11 java                                     
 4236 root      20   0 6667m 2.3g 8312 S 12.5 30.4 811:10.16 java                                     
 4237 root      20   0 6667m 2.3g 8312 S  9.6 30.4 814:50.57 java                                     
 4239 root      20   0 6667m 2.3g 8312 S  2.0 30.4 752:01.99 java                                          4294 root      20   0 6667m 2.3g 8312 S  0.7 30.4  56:16.83 java                                     
 4280 root      20   0 6667m 2.3g 8312 S  0.3 30.4  68:25.58 java                                     
 4233 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                     
 4234 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:07.16 java                                     
 4240 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:10.14 java                                     
 4241 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:08.93 java                                     
 4242 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                     
 4243 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:52.14 java                                     
 4244 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:47.82 java                                          4245 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:00.00 java                                     
 4246 root      20   0 6667m 2.3g 8312 S  0.0 30.4  19:30.64 java                                     
 4249 root      20   0 6667m 2.3g 8312 S  0.0 30.4   0:03.20 java 
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="JAVA" scheme="http://blog.lisanlai.cn/tags/JAVA/"/>
    
      <category term="CPU过高" scheme="http://blog.lisanlai.cn/tags/CPU%E8%BF%87%E9%AB%98/"/>
    
  </entry>
  
  <entry>
    <title>文件提取利器-Apache Tika</title>
    <link href="http://blog.lisanlai.cn/2016/04/29/%E6%96%87%E4%BB%B6%E6%8F%90%E5%8F%96%E5%88%A9%E5%99%A8-Apache-Tika/"/>
    <id>http://blog.lisanlai.cn/2016/04/29/文件提取利器-Apache-Tika/</id>
    <published>2016-04-29T13:13:18.000Z</published>
    <updated>2018-07-10T02:38:15.612Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Description: The Apache Tika™ toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF).<br>功能描述：Apache Tika 可以发现和提取各种各样类型文件的元数据（meatadata）和文件内容，例如:PPT，XLS 和PDF等等。</p><footer><strong>@官网</strong><cite><a href="https://tika.apache.org/" target="_blank" rel="noopener">tika.apache.org</a></cite></footer></blockquote><h2 id="Using-Tika-as-a-Maven-dependency"><a href="#Using-Tika-as-a-Maven-dependency" class="headerlink" title="Using Tika as a Maven dependency"></a>Using Tika as a Maven dependency</h2><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.apache.tika&lt;/groupId&gt;    &lt;artifactId&gt;tika-core&lt;/artifactId&gt;    &lt;version&gt;1.13&lt;/version&gt;  &lt;/dependency&gt;</code></pre><blockquote><p>If you want to use Tika to parse documents (instead of simply detecting document types, etc.), you’ll want to depend on tika-parsers instead:</p></blockquote><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.apache.tika&lt;/groupId&gt;    &lt;artifactId&gt;tika-parsers&lt;/artifactId&gt;    &lt;version&gt;1.13&lt;/version&gt;  &lt;/dependency&gt;</code></pre><a id="more"></a><h2 id="使用案例：利用Tika获取文件的Content-Type"><a href="#使用案例：利用Tika获取文件的Content-Type" class="headerlink" title="使用案例：利用Tika获取文件的Content-Type"></a>使用案例：利用Tika获取文件的Content-Type</h2><pre><code>String[] files = new String[]{        &quot;/Users/lisanlai/Desktop/file.docx&quot;,        &quot;/Users/lisanlai/Desktop/file.xlsx&quot;,        &quot;/Users/lisanlai/Desktop/file.pptx&quot;,        &quot;/Users/lisanlai/Desktop/file.md&quot;,        &quot;/Users/lisanlai/Desktop/file.txt&quot;,        &quot;/Users/lisanlai/Desktop/Test.java&quot;};for (int i = 0; i &lt; files.length; i++) {    TikaConfig tikaConfig = TikaConfig.getDefaultConfig();;    Metadata metadata = new Metadata();    MimeTypes mimeRegistry = tikaConfig.getMimeRepository();    String filename = files[i];    metadata.set(Metadata.RESOURCE_NAME_KEY, filename);    System.out.println(i+ &quot; = [&quot;            + mimeRegistry.detect(null, metadata) + &quot;]&quot;);}System.out.println(&quot;=========================================&quot;);for (int i = 0; i &lt; files.length; i++) {    TikaConfig tikaConfig = TikaConfig.getDefaultConfig();;    Metadata metadata = new Metadata();    String filename = files[i];    Path path = FileSystems.getDefault().getPath(filename);    InputStream stream = TikaInputStream.get(path);    Detector detector = tikaConfig.getDetector();    MediaType mediaType = detector.detect(stream, metadata);    System.out.println(i+ &quot; = [&quot;            + detector.detect(stream, metadata) + &quot;]&quot; + &quot; ==== &quot; + mediaType.getSubtype());}打印结果如下：0 = [application/vnd.openxmlformats-officedocument.wordprocessingml.document]1 = [application/vnd.openxmlformats-officedocument.spreadsheetml.sheet]2 = [application/vnd.openxmlformats-officedocument.presentationml.presentation]3 = [text/x-web-markdown]4 = [text/plain]5 = [text/x-java-source]=========================================0 = [application/vnd.openxmlformats-officedocument.wordprocessingml.document] ==== vnd.openxmlformats-officedocument.wordprocessingml.document1 = [application/vnd.openxmlformats-officedocument.spreadsheetml.sheet] ==== vnd.openxmlformats-officedocument.spreadsheetml.sheet2 = [application/vnd.openxmlformats-officedocument.presentationml.presentation] ==== vnd.openxmlformats-officedocument.presentationml.presentation3 = [text/plain] ==== plain4 = [text/plain] ==== plain5 = [text/plain] ==== plain</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;Description: The Apache Tika™ toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF).&lt;br&gt;功能描述：Apache Tika 可以发现和提取各种各样类型文件的元数据（meatadata）和文件内容，例如:PPT，XLS 和PDF等等。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;@官网&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://tika.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tika.apache.org&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;Using-Tika-as-a-Maven-dependency&quot;&gt;&lt;a href=&quot;#Using-Tika-as-a-Maven-dependency&quot; class=&quot;headerlink&quot; title=&quot;Using Tika as a Maven dependency&quot;&gt;&lt;/a&gt;Using Tika as a Maven dependency&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;tika-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.13&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;If you want to use Tika to parse documents (instead of simply detecting document types, etc.), you’ll want to depend on tika-parsers instead:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;tika-parsers&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.13&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="Tika" scheme="http://blog.lisanlai.cn/tags/Tika/"/>
    
      <category term="文件提取" scheme="http://blog.lisanlai.cn/tags/%E6%96%87%E4%BB%B6%E6%8F%90%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>配置MySQL主从复制</title>
    <link href="http://blog.lisanlai.cn/2016/04/22/%E9%85%8D%E7%BD%AEMySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>http://blog.lisanlai.cn/2016/04/22/配置MySQL主从复制/</id>
    <published>2016-04-22T03:09:18.000Z</published>
    <updated>2018-07-10T02:38:15.612Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>MySQL 服务器:  </p><pre><code>10.224.144.135（主)10.224.144.138（从）</code></pre></li><li><p>配置主服务器：编辑/etc/my.cnf</p><pre><code># vi /etc/my.cnf#add for replicationlog-bin=/var/lib/mysql/log-binserver-id=1binlog-do-db = testbinlog-do-db = CLOPSDBbinlog-ignore-db = mysqlinnodb_flush_log_at_trx_commit=1sync_binlog=1#add for replicationrelay-log=/var/lib/mysql/relay-binrelay-log-index=/var/lib/mysql/relay-bin.indexlog_slave_updates = 1auto_increment_increment = 2auto_increment_offset = 1</code></pre></li><li><p>保存退出 ，在master机上为slave机添加一同步帐号</p><pre><code>#mysql –u root –p Paswod:&gt;grant replication slave on *.* to &apos;clopsrepl&apos;@&apos;10.224.144.138&apos; identified by &apos;cscocmse&apos;; &gt;quit</code></pre><a id="more"></a></li><li><p>重启MySQL服务</p><pre><code>#service mysql restart</code></pre></li><li><p>为从服务器指定主服务器：</p><pre><code># mysql -u root -pEnter password:&gt;CHANGE MASTER TO MASTER_HOST=&apos;10.224.144.135&apos;, MASTER_USER=&apos;clopsrepl&apos;, MASTER_PASSWORD=&apos;cscocmse&apos;;&gt;start slave;</code></pre></li><li><p>如果要设置master-master  </p><pre><code>#那么在10.224.144.138上执行&gt;grant replication slave on *.* to &apos;clopsrepl&apos;@&apos;10.224.144.135&apos; identified by &apos;cscocmse&apos;; &gt;quit#再在10.224.144.135上执行：&gt;CHANGE MASTER TO MASTER_HOST=&apos;10.224.144.138&apos;, MASTER_USER=&apos;clopsrepl&apos;, MASTER_PASSWORD=&apos;cscocmse&apos;;&gt;start slave;</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;MySQL 服务器:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;10.224.144.135（主)
10.224.144.138（从）
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置主服务器：编辑/etc/my.cnf&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# vi /etc/my.cnf
#add for replication
log-bin=/var/lib/mysql/log-bin
server-id=1
binlog-do-db = test
binlog-do-db = CLOPSDB
binlog-ignore-db = mysql
innodb_flush_log_at_trx_commit=1
sync_binlog=1
#add for replication
relay-log=/var/lib/mysql/relay-bin
relay-log-index=/var/lib/mysql/relay-bin.index
log_slave_updates = 1
auto_increment_increment = 2
auto_increment_offset = 1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存退出 ，在master机上为slave机添加一同步帐号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mysql –u root –p 
Paswod:

&amp;gt;grant replication slave on *.* to &amp;apos;clopsrepl&amp;apos;@&amp;apos;10.224.144.138&amp;apos; identified by &amp;apos;cscocmse&amp;apos;; 
&amp;gt;quit
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="mysql" scheme="http://blog.lisanlai.cn/tags/mysql/"/>
    
      <category term="MySQL" scheme="http://blog.lisanlai.cn/tags/MySQL/"/>
    
      <category term="MySQL主从配置" scheme="http://blog.lisanlai.cn/tags/MySQL%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Spring Security Filter Ordering</title>
    <link href="http://blog.lisanlai.cn/2016/04/22/Spring-Security-Filter-Ordering/"/>
    <id>http://blog.lisanlai.cn/2016/04/22/Spring-Security-Filter-Ordering/</id>
    <published>2016-04-22T03:00:46.000Z</published>
    <updated>2018-07-10T02:38:15.611Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>The order that filters are defined in the chain is very important. Irrespective of which filters you are actually using, the order should be as follows:</strong></p></blockquote><ol><li><p>ChannelProcessingFilter, because it might need to redirect to a different protocol</p></li><li><p>SecurityContextPersistenceFilter, so a SecurityContext can be set up in the SecurityContextHolder at the beginning of a web request, and any changes to the SecurityContext can be copied to the HttpSession when the web request ends (ready for use with the next web request)</p></li><li><p>ConcurrentSessionFilter, because it uses the SecurityContextHolder functionality and needs to update theSessionRegistry to reflect ongoing requests from the principal</p></li><li><p>Authentication processing mechanisms - UsernamePasswordAuthenticationFilter, CasAuthenticationFilter,BasicAuthenticationFilter etc - so that the SecurityContextHolder can be modified to contain a valid Authenticationrequest token</p><a id="more"></a></li><li><p>The SecurityContextHolderAwareRequestFilter, if you are using it to install a Spring Security awareHttpServletRequestWrapper into your servlet container</p></li><li><p>The JaasApiIntegrationFilter, if a JaasAuthenticationToken is in the SecurityContextHolder this will process theFilterChain as the Subject in the JaasAuthenticationToken</p></li><li><p>RememberMeAuthenticationFilter, so that if no earlier authentication processing mechanism updated theSecurityContextHolder, and the request presents a cookie that enables remember-me services to take place, a suitable remembered Authentication object will be put there</p></li><li><p>AnonymousAuthenticationFilter, so that if no earlier authentication processing mechanism updated theSecurityContextHolder, an anonymous Authentication object will be put there</p></li><li><p>ExceptionTranslationFilter, to catch any Spring Security exceptions so that either an HTTP error response can be returned or an appropriate AuthenticationEntryPoint can be launched</p></li><li><p>FilterSecurityInterceptor, to protect web URIs and raise exceptions when access is denied</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The order that filters are defined in the chain is very important. Irrespective of which filters you are actually using, the order should be as follows:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ChannelProcessingFilter, because it might need to redirect to a different protocol&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SecurityContextPersistenceFilter, so a SecurityContext can be set up in the SecurityContextHolder at the beginning of a web request, and any changes to the SecurityContext can be copied to the HttpSession when the web request ends (ready for use with the next web request)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ConcurrentSessionFilter, because it uses the SecurityContextHolder functionality and needs to update theSessionRegistry to reflect ongoing requests from the principal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Authentication processing mechanisms - UsernamePasswordAuthenticationFilter, CasAuthenticationFilter,BasicAuthenticationFilter etc - so that the SecurityContextHolder can be modified to contain a valid Authenticationrequest token&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="Java" scheme="http://blog.lisanlai.cn/tags/Java/"/>
    
      <category term="spring security" scheme="http://blog.lisanlai.cn/tags/spring-security/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm HmacSHA256 not available</title>
    <link href="http://blog.lisanlai.cn/2016/04/21/Algorithm-HmacSHA256-not-available/"/>
    <id>http://blog.lisanlai.cn/2016/04/21/Algorithm-HmacSHA256-not-available/</id>
    <published>2016-04-21T08:32:01.000Z</published>
    <updated>2018-07-10T02:38:15.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景："><a href="#场景：" class="headerlink" title="场景："></a>场景：</h1><blockquote><p><strong>有一段代码需要访问Amazon，直接执行main方法是没问题的。可是把代码打成jar包，用ProcessBuilder执行java -jar的方式来run的时候，抛出了Exception。</strong></p></blockquote><h1 id="Algorithm-HmacSHA256-not-available-异常信息"><a href="#Algorithm-HmacSHA256-not-available-异常信息" class="headerlink" title="Algorithm HmacSHA256 not available 异常信息"></a>Algorithm HmacSHA256 not available 异常信息</h1><pre><code>Exception in thread &quot;pool-1-thread-1&quot; com.amazonaws.AmazonClientException: Unable to calculate a request signature: Unable to calculate a request signature: Algorithm HmacSHA256 not availableat com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:81)at com.amazonaws.auth.AWS4Signer.computeSignature(AWS4Signer.java:289)at com.amazonaws.auth.AWS4Signer.sign(AWS4Signer.java:127)at com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:646)at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:454)at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:294)at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke(AmazonDynamoDBClient.java:3106)at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.batchWriteItem(AmazonDynamoDBClient.java:771)at com.amazonaws.services.dynamodbv2.document.internal.BatchWriteItemImpl.doBatchWriteItem(BatchWriteItemImpl.java:111)at com.amazonaws.services.dynamodbv2.document.internal.BatchWriteItemImpl.batchWriteItem(BatchWriteItemImpl.java:52)at com.amazonaws.services.dynamodbv2.document.DynamoDB.batchWriteItem(DynamoDB.java:159)at com.saasbee.webapp.service.search.DocumentService.store(DocumentService.java:79)at com.saasbee.webapp.service.search.thread.ParseTaskThread.run(ParseTaskThread.java:97)at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)at java.lang.Thread.run(Unknown Source)Caused by: com.amazonaws.AmazonClientException: Unable to calculate a request signature: Algorithm HmacSHA256 not availableat com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:91)at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:79)... 15 moreCaused by: java.security.NoSuchAlgorithmException: Algorithm HmacSHA256 not availableat javax.crypto.Mac.getInstance(Mac.java:181)at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:87)... 16 more</code></pre><a id="more"></a><h1 id="Algorithm-HmacSHA256-not-available-解决办法"><a href="#Algorithm-HmacSHA256-not-available-解决办法" class="headerlink" title="Algorithm HmacSHA256 not available 解决办法"></a>Algorithm HmacSHA256 not available 解决办法</h1><blockquote><p><strong>猜测应该是Amazon的security有关方面的问题。最终我的解决方法如下：</strong><br><strong>在pom.xml里面加入${JAVA_HOME}/jre/lib/sunjce_provider.jar的依赖，然后重新package，异常消失。</strong></p></blockquote><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.sun&lt;/groupId&gt;    &lt;artifactId&gt;sunjce_provider&lt;/artifactId&gt;    &lt;scope&gt;system&lt;/scope&gt;    &lt;version&gt;1.0&lt;/version&gt;    &lt;systemPath&gt;${JAVA_HOME}/jre/lib/sunjce_provider.jar&lt;/systemPath&gt;&lt;/dependency&gt;</code></pre><blockquote><p><strong>缺点：要求调用这个jar的程序的jre版本与生成这个jar的jre版本一致。</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;场景：&quot;&gt;&lt;a href=&quot;#场景：&quot; class=&quot;headerlink&quot; title=&quot;场景：&quot;&gt;&lt;/a&gt;场景：&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;有一段代码需要访问Amazon，直接执行main方法是没问题的。可是把代码打成jar包，用ProcessBuilder执行java -jar的方式来run的时候，抛出了Exception。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Algorithm-HmacSHA256-not-available-异常信息&quot;&gt;&lt;a href=&quot;#Algorithm-HmacSHA256-not-available-异常信息&quot; class=&quot;headerlink&quot; title=&quot;Algorithm HmacSHA256 not available 异常信息&quot;&gt;&lt;/a&gt;Algorithm HmacSHA256 not available 异常信息&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Exception in thread &amp;quot;pool-1-thread-1&amp;quot; com.amazonaws.AmazonClientException: Unable to calculate a 
request signature: Unable to calculate a request signature: Algorithm HmacSHA256 not available
at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:81)
at com.amazonaws.auth.AWS4Signer.computeSignature(AWS4Signer.java:289)
at com.amazonaws.auth.AWS4Signer.sign(AWS4Signer.java:127)
at com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:646)
at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:454)
at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:294)
at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke(AmazonDynamoDBClient.java:3106)
at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.batchWriteItem(AmazonDynamoDBClient.java:771)
at com.amazonaws.services.dynamodbv2.document.internal.BatchWriteItemImpl.doBatchWriteItem(BatchWriteItemImpl.java:111)
at com.amazonaws.services.dynamodbv2.document.internal.BatchWriteItemImpl.batchWriteItem(BatchWriteItemImpl.java:52)
at com.amazonaws.services.dynamodbv2.document.DynamoDB.batchWriteItem(DynamoDB.java:159)
at com.saasbee.webapp.service.search.DocumentService.store(DocumentService.java:79)
at com.saasbee.webapp.service.search.thread.ParseTaskThread.run(ParseTaskThread.java:97)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: com.amazonaws.AmazonClientException: Unable to calculate a request signature: Algorithm HmacSHA256 not available
at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:91)
at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:79)
... 15 more
Caused by: java.security.NoSuchAlgorithmException: Algorithm HmacSHA256 not available
at javax.crypto.Mac.getInstance(Mac.java:181)
at com.amazonaws.auth.AbstractAWSSigner.sign(AbstractAWSSigner.java:87)
... 16 more
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="AmazonClientException" scheme="http://blog.lisanlai.cn/tags/AmazonClientException/"/>
    
      <category term="Algorithm" scheme="http://blog.lisanlai.cn/tags/Algorithm/"/>
    
      <category term="HmacSHA256" scheme="http://blog.lisanlai.cn/tags/HmacSHA256/"/>
    
  </entry>
  
  <entry>
    <title>使用ProtoBuffers做数据通信</title>
    <link href="http://blog.lisanlai.cn/2016/04/20/ProtoBuffers/"/>
    <id>http://blog.lisanlai.cn/2016/04/20/ProtoBuffers/</id>
    <published>2016-04-20T06:29:01.000Z</published>
    <updated>2018-07-10T02:38:15.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Proto-Buffers-简介"><a href="#Proto-Buffers-简介" class="headerlink" title="Proto Buffers 简介"></a>Proto Buffers 简介</h1><h2 id="Proto-Buffers-是什么？"><a href="#Proto-Buffers-是什么？" class="headerlink" title="Proto Buffers 是什么？"></a>Proto Buffers 是什么？</h2><blockquote><p>Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.</p><footer><strong>@官网</strong><cite><a href="https://developers.google.com/protocol-buffers" target="_blank" rel="noopener">developers.google.com/protocol-buffers</a></cite></footer></blockquote><a id="more"></a><h2 id="Code-example："><a href="#Code-example：" class="headerlink" title="Code example："></a>Code example：</h2><ul><li><p>Define proto file</p><pre><code>message Person {      required string name = 1;      required int32 id = 2;      optional string email = 3;}</code></pre></li><li><p>Write to outputstream</p><pre><code>Person john = Person.newBuilder()    .setId(1234)    .setName(&quot;John Doe&quot;)    .setEmail(&quot;jdoe@example.com&quot;)    .build();output = new FileOutputStream(args[0]);john.writeTo(output);</code></pre></li><li><p>Parse from inputstream</p><pre><code>Person john;fstream input(argv[1],    ios::in | ios::binary);john.ParseFromIstream(&amp;input);id = john.id();name = john.name();email = john.email();</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Proto-Buffers-简介&quot;&gt;&lt;a href=&quot;#Proto-Buffers-简介&quot; class=&quot;headerlink&quot; title=&quot;Proto Buffers 简介&quot;&gt;&lt;/a&gt;Proto Buffers 简介&lt;/h1&gt;&lt;h2 id=&quot;Proto-Buffers-是什么？&quot;&gt;&lt;a href=&quot;#Proto-Buffers-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Proto Buffers 是什么？&quot;&gt;&lt;/a&gt;Proto Buffers 是什么？&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;@官网&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://developers.google.com/protocol-buffers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;developers.google.com/protocol-buffers&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Development" scheme="http://blog.lisanlai.cn/categories/Development/"/>
    
    
      <category term="Java" scheme="http://blog.lisanlai.cn/tags/Java/"/>
    
      <category term="Protobuffers" scheme="http://blog.lisanlai.cn/tags/Protobuffers/"/>
    
  </entry>
  
</feed>
